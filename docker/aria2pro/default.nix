# Auto-generated using compose2nix v0.3.1.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."aria2-pro" = {
    image = "p3terx/aria2-pro";
    environment = {
      "CUSTOM_TRACKER_URL" = "";
      "DISK_CACHE" = "64M";
      "IPV6_MODE" = "false";
      "LISTEN_PORT" = "6888";
      "PGID" = "65534";
      "PUID" = "65534";
      "RPC_PORT" = "6800";
      "RPC_SECRET" = "gui159";
      "TZ" = "Asia/Shanghai";
      "UMASK_SET" = "022";
      "UPDATE_TRACKERS" = "true";
    };
    volumes = [
      "/home/ming/aria2/aria2-config:/config:rw"
      "/home/ming/aria2/aria2-downloads:/downloads:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
    ];
  };
  systemd.services."docker-aria2-pro" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [
      "docker-compose-aira2-root.target"
    ];
    wantedBy = [
      "docker-compose-aira2-root.target"
    ];
  };
  virtualisation.oci-containers.containers."ariang" = {
    image = "p3terx/ariang";
    cmd = [ "--port" "6880" "--ipv6" ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
    ];
  };
  systemd.services."docker-ariang" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    partOf = [
      "docker-compose-aira2-root.target"
    ];
    wantedBy = [
      "docker-compose-aira2-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-aira2-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
